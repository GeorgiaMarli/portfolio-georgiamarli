/* ==========================================================================
   SUM√ÅRIO DO SCRIPT
   ==========================================================================
   1. L√≥gica para a Troca de Tema (Claro/Escuro)
   2. Inicializa√ß√£o da Biblioteca de Anima√ß√µes (AOS - Animate on Scroll)
   ========================================================================== */

// Espera o documento HTML ser completamente carregado para executar o script.
// Isso √© uma boa pr√°tica para evitar erros de elementos que ainda n√£o existem na p√°gina.
document.addEventListener('DOMContentLoaded', () => {

    /* ==========================================================================
       1. L√≥gica para a Troca de Tema (Claro/Escuro)
       ========================================================================== */
    
    // Seleciona os elementos do DOM necess√°rios para a funcionalidade
    const themeSwitcher = document.getElementById('theme-switcher');
    const body = document.body;

    // Define uma chave √∫nica para salvar a prefer√™ncia de tema no localStorage do navegador
    const themeKey = 'theme-preference';

    // Fun√ß√£o que aplica um tema espec√≠fico (claro ou escuro)
    const applyTheme = (theme) => {
        if (theme === 'dark') {
            // Adiciona o atributo 'data-theme="dark"' ao body. O CSS cuida do resto.
            body.setAttribute('data-theme', 'dark');
            // Muda o √≠cone do bot√£o para o sol, indicando que o pr√≥ximo clique ativar√° o tema claro
            if (themeSwitcher) themeSwitcher.textContent = '‚òÄÔ∏è';
        } else {
            // Remove o atributo, fazendo o site voltar ao tema claro padr√£o
            body.removeAttribute('data-theme');
            // Muda o √≠cone do bot√£o para a lua
            if (themeSwitcher) themeSwitcher.textContent = 'üåô';
        }
    };

    // Carrega a prefer√™ncia de tema salva quando a p√°gina √© aberta
    const savedTheme = localStorage.getItem(themeKey);
    if (savedTheme) {
        applyTheme(savedTheme); // Aplica o tema que o usu√°rio escolheu na √∫ltima visita
    }

    // Adiciona o evento de clique ao bot√£o de troca de tema
    // Verifica se o bot√£o existe na p√°gina antes de adicionar o evento
    if (themeSwitcher) {
        themeSwitcher.addEventListener('click', () => {
            // Verifica qual √© o tema atual
            const isDarkMode = body.getAttribute('data-theme') === 'dark';
            
            // Define o novo tema como o oposto do atual
            const newTheme = isDarkMode ? 'light' : 'dark';
    
            // Aplica visualmente o novo tema
            applyTheme(newTheme);
            
            // Salva a nova prefer√™ncia do usu√°rio no localStorage
            localStorage.setItem(themeKey, newTheme);
        });
    }


    /* ==========================================================================
       2. Inicializa√ß√£o da Biblioteca de Anima√ß√µes (AOS - Animate on Scroll)
       ========================================================================== */
    
    // Inicia a biblioteca AOS com configura√ß√µes personalizadas
    AOS.init({
        duration: 1000, // Dura√ß√£o da anima√ß√£o em milissegundos (1 segundo)
        once: true,     // Define se a anima√ß√£o deve acontecer apenas uma vez ao rolar
        offset: 50,     // Dist√¢ncia (em pixels) do elemento para o in√≠cio da tela antes da anima√ß√£o come√ßar
    });

});